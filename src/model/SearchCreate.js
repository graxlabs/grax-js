/**
 * GRAX API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchFilters from './SearchFilters';
import SearchLimits from './SearchLimits';

/**
 * The SearchCreate model module.
 * @module model/SearchCreate
 * @version 0.0.1
 */
class SearchCreate {
    /**
     * Constructs a new <code>SearchCreate</code>.
     * @alias module:model/SearchCreate
     */
    constructor() { 
        
        SearchCreate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchCreate} obj Optional instance to populate.
     * @return {module:model/SearchCreate} The populated <code>SearchCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchCreate();

            if (data.hasOwnProperty('filters')) {
                obj['filters'] = SearchFilters.constructFromObject(data['filters']);
            }
            if (data.hasOwnProperty('limits')) {
                obj['limits'] = SearchLimits.constructFromObject(data['limits']);
            }
            if (data.hasOwnProperty('notify')) {
                obj['notify'] = ApiClient.convertToType(data['notify'], 'Boolean');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('reverse')) {
                obj['reverse'] = ApiClient.convertToType(data['reverse'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('timeField')) {
                obj['timeField'] = ApiClient.convertToType(data['timeField'], 'String');
            }
            if (data.hasOwnProperty('timeFieldMax')) {
                obj['timeFieldMax'] = ApiClient.convertToType(data['timeFieldMax'], 'Date');
            }
            if (data.hasOwnProperty('timeFieldMin')) {
                obj['timeFieldMin'] = ApiClient.convertToType(data['timeFieldMin'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchCreate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `filters`
        if (data['filters']) { // data not null
          SearchFilters.validateJSON(data['filters']);
        }
        // validate the optional field `limits`
        if (data['limits']) { // data not null
          SearchLimits.validateJSON(data['limits']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['timeField'] && !(typeof data['timeField'] === 'string' || data['timeField'] instanceof String)) {
            throw new Error("Expected the field `timeField` to be a primitive type in the JSON string but got " + data['timeField']);
        }

        return true;
    }


}



/**
 * @member {module:model/SearchFilters} filters
 */
SearchCreate.prototype['filters'] = undefined;

/**
 * @member {module:model/SearchLimits} limits
 */
SearchCreate.prototype['limits'] = undefined;

/**
 * Whether to notify when the search is complete.
 * @member {Boolean} notify
 */
SearchCreate.prototype['notify'] = undefined;

/**
 * Object to search.
 * @member {String} object
 */
SearchCreate.prototype['object'] = undefined;

/**
 * Whether to search in reverse order.
 * @member {Boolean} reverse
 */
SearchCreate.prototype['reverse'] = undefined;

/**
 * Status of the records to search.
 * @member {String} status
 */
SearchCreate.prototype['status'] = undefined;

/**
 * Time field to search. Can be 'createdAt', 'modifiedAt', 'latestModifiedAt', 'rangeLatestModifiedAt', 'allModifiedAt', 'deletedAt' or 'purgedAt'. Defaults to 'createdAt'.
 * @member {String} timeField
 */
SearchCreate.prototype['timeField'] = undefined;

/**
 * Maximum time for the search.
 * @member {Date} timeFieldMax
 */
SearchCreate.prototype['timeFieldMax'] = undefined;

/**
 * Minimum time for the search.
 * @member {Date} timeFieldMin
 */
SearchCreate.prototype['timeFieldMin'] = undefined;






export default SearchCreate;

