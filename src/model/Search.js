/*
 * GRAX API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.54
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import SearchFilters from './SearchFilters';
import SearchLimits from './SearchLimits';

/**
 * The Search model module.
 * @module model/Search
 * @version 0.0.1
 */
export default class Search {
  /**
   * Constructs a new <code>Search</code>.
   * @alias module:model/Search
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Search</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Search} obj Optional instance to populate.
   * @return {module:model/Search} The populated <code>Search</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Search();
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('deleting'))
        obj.deleting = ApiClient.convertToType(data['deleting'], 'Date');
      if (data.hasOwnProperty('filterStatus'))
        obj.filterStatus = ApiClient.convertToType(data['filterStatus'], 'String');
      if (data.hasOwnProperty('filters'))
        obj.filters = SearchFilters.constructFromObject(data['filters']);
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('limits'))
        obj.limits = SearchLimits.constructFromObject(data['limits']);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('object'))
        obj._object = ApiClient.convertToType(data['object'], 'String');
      if (data.hasOwnProperty('progress'))
        obj.progress = ApiClient.convertToType(data['progress'], 'Number');
      if (data.hasOwnProperty('recordsFound'))
        obj.recordsFound = ApiClient.convertToType(data['recordsFound'], 'Number');
      if (data.hasOwnProperty('recordsScanned'))
        obj.recordsScanned = ApiClient.convertToType(data['recordsScanned'], 'Number');
      if (data.hasOwnProperty('recordsTimeFirst'))
        obj.recordsTimeFirst = ApiClient.convertToType(data['recordsTimeFirst'], 'Date');
      if (data.hasOwnProperty('recordsTimeLast'))
        obj.recordsTimeLast = ApiClient.convertToType(data['recordsTimeLast'], 'Date');
      if (data.hasOwnProperty('reverse'))
        obj.reverse = ApiClient.convertToType(data['reverse'], 'Boolean');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('timeField'))
        obj.timeField = ApiClient.convertToType(data['timeField'], 'String');
      if (data.hasOwnProperty('timeFieldMax'))
        obj.timeFieldMax = ApiClient.convertToType(data['timeFieldMax'], 'Date');
      if (data.hasOwnProperty('timeFieldMin'))
        obj.timeFieldMin = ApiClient.convertToType(data['timeFieldMin'], 'Date');
      if (data.hasOwnProperty('updated'))
        obj.updated = ApiClient.convertToType(data['updated'], 'Date');
    }
    return obj;
  }
}

/**
 * Time the search job was created.
 * @member {Date} created
 */
Search.prototype.created = undefined;

/**
 * Time the search will be automatically deleted if its results are not accessed.
 * @member {Date} deleting
 */
Search.prototype.deleting = undefined;

/**
 * Status of the records to search.
 * @member {String} filterStatus
 */
Search.prototype.filterStatus = undefined;

/**
 * @member {module:model/SearchFilters} filters
 */
Search.prototype.filters = undefined;

/**
 * ID of the search job.
 * @member {String} id
 */
Search.prototype.id = undefined;

/**
 * @member {module:model/SearchLimits} limits
 */
Search.prototype.limits = undefined;

/**
 * Name of the search job.
 * @member {String} name
 */
Search.prototype.name = undefined;

/**
 * Object searched.
 * @member {String} _object
 */
Search.prototype._object = undefined;

/**
 * Progress of the search job.
 * @member {Number} progress
 */
Search.prototype.progress = undefined;

/**
 * Number of records found.
 * @member {Number} recordsFound
 */
Search.prototype.recordsFound = undefined;

/**
 * Number of records scanned.
 * @member {Number} recordsScanned
 */
Search.prototype.recordsScanned = undefined;

/**
 * Time of the first found record.
 * @member {Date} recordsTimeFirst
 */
Search.prototype.recordsTimeFirst = undefined;

/**
 * Time of the last found record.
 * @member {Date} recordsTimeLast
 */
Search.prototype.recordsTimeLast = undefined;

/**
 * Whether records were searched in reverse order.
 * @member {Boolean} reverse
 */
Search.prototype.reverse = undefined;

/**
 * Status of the search job.
 * @member {String} status
 */
Search.prototype.status = undefined;

/**
 * Time field used for the search. Can be 'createdAt', 'modifiedAt', 'latestModifiedAt', 'rangeLatestModifiedAt', 'allModifiedAt', 'deletedAt' or 'purgedAt'.
 * @member {String} timeField
 */
Search.prototype.timeField = undefined;

/**
 * Maximum time for the search.
 * @member {Date} timeFieldMax
 */
Search.prototype.timeFieldMax = undefined;

/**
 * Minimum time for the search.
 * @member {Date} timeFieldMin
 */
Search.prototype.timeFieldMin = undefined;

/**
 * Time the search job was last updated.
 * @member {Date} updated
 */
Search.prototype.updated = undefined;

