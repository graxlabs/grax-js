/**
 * GRAX API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchFieldFilter model module.
 * @module model/SearchFieldFilter
 * @version 0.0.1
 */
class SearchFieldFilter {
    /**
     * Constructs a new <code>SearchFieldFilter</code>.
     * @alias module:model/SearchFieldFilter
     */
    constructor() { 
        
        SearchFieldFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchFieldFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchFieldFilter} obj Optional instance to populate.
     * @return {module:model/SearchFieldFilter} The populated <code>SearchFieldFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchFieldFilter();

            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('filterType')) {
                obj['filterType'] = ApiClient.convertToType(data['filterType'], 'String');
            }
            if (data.hasOwnProperty('not')) {
                obj['not'] = ApiClient.convertToType(data['not'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchFieldFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchFieldFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }
        // ensure the json data is a string
        if (data['filterType'] && !(typeof data['filterType'] === 'string' || data['filterType'] instanceof String)) {
            throw new Error("Expected the field `filterType` to be a primitive type in the JSON string but got " + data['filterType']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * @member {String} field
 */
SearchFieldFilter.prototype['field'] = undefined;

/**
 * @member {String} filterType
 */
SearchFieldFilter.prototype['filterType'] = undefined;

/**
 * @member {Boolean} not
 */
SearchFieldFilter.prototype['not'] = undefined;

/**
 * @member {String} value
 */
SearchFieldFilter.prototype['value'] = undefined;






export default SearchFieldFilter;

